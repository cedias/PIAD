#!/usr/bin/python
from __future__ import print_function
import sys
import mysql.connector
from mysql.connector import errorcode

if(len(sys.argv) != 4):
	print("Arguments error, USAGE: ./createDB <database> <user> <password>")
	exit(1)


DB_NAME = sys.argv[1]

TABLES = {}
TABLES['reviews'] = (
'''
CREATE TABLE IF NOT EXISTS reviews
(
review_id INT not null AUTO_INCREMENT,
user_id VARCHAR(20),
product_id VARCHAR(20),
score FLOAT(2),
time DATE,
helpfullness INT,
nb_helpfullness INT,
summary VARCHAR(255),
text LONGTEXT,
is_exact_duplicate BOOLEAN,
exact_duplicate_id INT,
PRIMARY KEY(review_id)
)
;
''')

cnx = mysql.connector.connect(user=sys.argv[2],password=sys.argv[3])
cursor = cnx.cursor()

def create_database(cursor):
    try:
        cursor.execute(
            "CREATE DATABASE {} DEFAULT CHARACTER SET 'utf8'".format(DB_NAME))
    except mysql.connector.Error as err:
        print("Failed creating database: {}".format(err))
        exit(1)

try:
    cnx.database = DB_NAME    
except mysql.connector.Error as err:
    if err.errno == errorcode.ER_BAD_DB_ERROR:
        create_database(cursor)
        cnx.database = DB_NAME
    else:
        print(err)
        exit(1)

for name, ddl in TABLES.iteritems():
    try:
        print("Creating table {}: ".format(name), end='')
        cursor.execute(ddl)
    except mysql.connector.Error as err:
        if err.errno == errorcode.ER_TABLE_EXISTS_ERROR:
            print("already exists.")
        else:
            print(err.msg)
    else:
        print("OK")

cursor.close()
cnx.close()
