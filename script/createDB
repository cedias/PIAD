#!/usr/bin/python
from __future__ import print_function
import sys
import mysql.connector
from mysql.connector import errorcode

if(len(sys.argv) != 4):
	print("Arguments error, USAGE: ./createDB <database> <user> <password>")
	exit(1)


DB_NAME = sys.argv[1]

TABLES = {}
TABLES['reviews'] = (
	'''
	CREATE TABLE IF NOT EXISTS reviews
	(
	review_id INT not null AUTO_INCREMENT,
	user_id VARCHAR(25),
	product_id VARCHAR(20),
	score FLOAT(2),
	time DATE,
	helpfullness INT,
	nb_helpfullness INT,
	summary TEXT,
	text LONGTEXT,
	exact_dup_id INT,
	near_dup_id INT,
	cos_simil_ident DOUBLE,
	honesty_score DOUBLE DEFAULT 1.0 ,
	PRIMARY KEY(review_id),
	INDEX IndUser (user_id),
	INDEX IndProd (product_id),
	INDEX IndCossim (cos_simil_ident),
	INDEX IndExDup (exact_dup_id),
	INDEX IndNeDup (near_dup_id),
	INDEX IndHonest (honesty_score)
	)
	;
	'''
)

TABLES['users'] = (
	 '''
	 CREATE TABLE IF NOT EXISTS users
	 (
	    user_id VARCHAR(25),
	    username VARCHAR(50),
	    trust_score DOUBLE DEFAULT 1.0 ,
	    PRIMARY KEY(user_id),
	    INDEX IndTrust (trust_score)
	 );
	'''
)

TABLES['products'] = (
	 '''
	 CREATE TABLE IF NOT EXISTS products
	 (
	    product_id VARCHAR(20),
	    product_name TEXT,
	    nb_bursts INT DEFAULT 0,
	    reliability_score DOUBLE DEFAULT 1.0,
	    PRIMARY KEY(product_id),
	    INDEX IndRel (reliability_score)
	 );
	'''
)





cnx = mysql.connector.connect(user=sys.argv[2],password=sys.argv[3])
cursor = cnx.cursor()

def create_database(cursor):
    try:
        cursor.execute(
            "CREATE DATABASE {} DEFAULT CHARACTER SET 'utf8'".format(DB_NAME))
    except mysql.connector.Error as err:
        print("Failed creating database: {}".format(err))
        exit(1)

try:
    cnx.database = DB_NAME    
except mysql.connector.Error as err:
    if err.errno == errorcode.ER_BAD_DB_ERROR:
        create_database(cursor)
        cnx.database = DB_NAME
    else:
        print(err)
        exit(1)

for name, ddl in TABLES.iteritems():
    try:
        print("Creating table {}: ".format(name), end='')
        cursor.execute(ddl)
    except mysql.connector.Error as err:
        if err.errno == errorcode.ER_TABLE_EXISTS_ERROR:
            print("already exists.")
        else:
            print(err.msg)
    else:
        print("OK")

cursor.close()
cnx.close()
